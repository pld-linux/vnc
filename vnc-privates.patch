--- orig/vncHooks.cc	2009-01-03 21:58:21.000000000 +0100
+++ chng/vncHooks.cc	2009-01-03 22:00:36.000000000 +0100
@@ -87,9 +87,15 @@
     GCOps *wrappedOps;
 } vncHooksGCRec, *vncHooksGCPtr;
 
-static int vncHooksScreenIndex;
-static int vncHooksGCIndex;
+static DevPrivateKey vncHooksScrPrivateKey = &vncHooksScrPrivateKey;
+static DevPrivateKey vncHooksGCPrivateKey = &vncHooksGCPrivateKey;
 
+#define vncHooksScreenPrivate(scrn) \
+	(vncHooksScreenPtr) dixLookupPrivate (&(scrn)->devPrivates, \
+					      vncHooksScrPrivateKey)
+#define vncHooksGCPrivate(pGC) \
+	(vncHooksGCPtr) dixLookupPrivate (&(pGC)->devPrivates, \
+					  vncHooksGCPrivateKey)
 
 // screen functions
 
@@ -208,26 +214,11 @@
   if (vncHooksGeneration != serverGeneration) {
     vncHooksGeneration = serverGeneration;
 
-    vncHooksScreenIndex = AllocateScreenPrivateIndex();
-    if (vncHooksScreenIndex < 0) {
-      ErrorF("vncHooksInit: AllocateScreenPrivateIndex failed\n");
-      return FALSE;
-    }
-
-    vncHooksGCIndex = AllocateGCPrivateIndex();
-    if (vncHooksGCIndex < 0) {
-      ErrorF("vncHooksInit: AllocateGCPrivateIndex failed\n");
-      return FALSE;
-    }
-  }
-
-  if (!AllocateGCPrivate(pScreen, vncHooksGCIndex, sizeof(vncHooksGCRec))) {
-    ErrorF("vncHooksInit: AllocateGCPrivate failed\n");
-    return FALSE;
+    if (!dixRequestPrivate (vncHooksGCPrivateKey, sizeof (vncHooksGCRec)))
+	return FALSE;
   }
 
   vncHooksScreen = (vncHooksScreenPtr)xnfalloc(sizeof(vncHooksScreenRec));
-  pScreen->devPrivates[vncHooksScreenIndex].ptr = (pointer)vncHooksScreen;
 
   vncHooksScreen->desktop = desktop;
 
@@ -267,6 +258,8 @@
   }
 #endif
 
+  dixSetPrivate (&pScreen->devPrivates, vncHooksScrPrivateKey, vncHooksScreen);
+
   return TRUE;
 }
 
@@ -282,11 +275,10 @@
 // distinct type, so it would have to use templates, and it's not worth that
 // much pain.
 
-#define SCREEN_UNWRAP(scrn,field)                                         \
-  ScreenPtr pScreen = scrn;                                               \
-  vncHooksScreenPtr vncHooksScreen                                        \
-    = ((vncHooksScreenPtr)pScreen->devPrivates[vncHooksScreenIndex].ptr); \
-  pScreen->field = vncHooksScreen->field;                                 \
+#define SCREEN_UNWRAP(scrn,field) \
+  ScreenPtr pScreen = scrn; \
+  vncHooksScreenPtr vncHooksScreen = vncHooksScreenPrivate (scrn); \
+  pScreen->field = vncHooksScreen->field; \
   DBGPRINT((stderr,"vncHooks" #field " called\n"));
 
 #define SCREEN_REWRAP(field) pScreen->field = vncHooks##field;
@@ -323,8 +315,7 @@
 {
   SCREEN_UNWRAP(pGC->pScreen, CreateGC);
     
-  vncHooksGCPtr vncHooksGC
-    = (vncHooksGCPtr)pGC->devPrivates[vncHooksGCIndex].ptr;
+  vncHooksGCPtr vncHooksGC = vncHooksGCPrivate (pGC);
 
   Bool ret = (*pScreen->CreateGC) (pGC);
 
@@ -504,8 +495,7 @@
                       CARD16 height)
 {
   ScreenPtr pScreen = pDst->pDrawable->pScreen;
-  vncHooksScreenPtr vncHooksScreen = \
-    ((vncHooksScreenPtr)pScreen->devPrivates[vncHooksScreenIndex].ptr);
+  vncHooksScreenPtr vncHooksScreen = vncHooksScreenPrivate (pScreen);
   BoxRec box;
   PictureScreenPtr ps = GetPictureScreen(pScreen);
 
@@ -540,7 +530,7 @@
 class GCFuncUnwrapper {
 public:
   GCFuncUnwrapper(GCPtr pGC_) : pGC(pGC_) {
-    vncHooksGC = (vncHooksGCPtr)pGC->devPrivates[vncHooksGCIndex].ptr;
+    vncHooksGC = vncHooksGCPrivate (pGC);
     pGC->funcs = vncHooksGC->wrappedFuncs;
     if (vncHooksGC->wrappedOps)
       pGC->ops = vncHooksGC->wrappedOps;
@@ -625,7 +615,7 @@
   GCOpUnwrapper(DrawablePtr pDrawable, GCPtr pGC_)
     : pGC(pGC_), pScreen(pDrawable->pScreen)
   {
-    vncHooksGC = (vncHooksGCPtr)pGC->devPrivates[vncHooksGCIndex].ptr;
+    vncHooksGC = vncHooksGCPrivate (pGC);
     oldFuncs = pGC->funcs;
     pGC->funcs = vncHooksGC->wrappedFuncs;
     pGC->ops = vncHooksGC->wrappedOps;
@@ -644,8 +634,7 @@
 #define GC_OP_UNWRAPPER(pDrawable, pGC, name)                             \
   GCOpUnwrapper u(pDrawable, pGC);                                        \
   ScreenPtr pScreen = (pDrawable)->pScreen;                               \
-  vncHooksScreenPtr vncHooksScreen                                        \
-    = ((vncHooksScreenPtr)pScreen->devPrivates[vncHooksScreenIndex].ptr); \
+  vncHooksScreenPtr vncHooksScreen = vncHooksScreenPrivate (pScreen);	  \
   DBGPRINT((stderr,"vncHooks" #name " called\n"));
 
 
